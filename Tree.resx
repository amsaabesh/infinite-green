<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>